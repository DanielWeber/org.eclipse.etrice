RoomModel org.eclipse.etrice.core.etrice.example.base {

DataClass DBase {
	Attribute c : int32
}

DataClass DTest extends DBase {
	Attribute a : int32
	Attribute b : int32
	
	Operation compute() : int {
		"return a*b;"
	}
	Operation computeMore(c: int, d: int) : int {
		"return (a*b)+(c*d);"
	}
}

ProtocolClass MyBaseProtocol { 
	incoming { 
		Message message1 (value: DTest) 
	} 
	outgoing { 
		Message message3 ()
	} 
}

ProtocolClass MySimpleProtocol extends MyBaseProtocol { 
	incoming { 
		Message message2 () 
	} 
	outgoing { 
		Message message4 ()
	} 
}

ActorClass a_Receiver {
	Interface {
		Port in_port : MySimpleProtocol
	}
	
	Structure {
		external Port in_port
		
		Attribute _member1 : int32
		Attribute _member2 : DTest
	}
	
	Behavior {
		Operation getMember1() : int {
			"return _member1;"
		}
		Operation setMember1(value : int) {
			"_member1 = value;"
			"//Klaus"
		}
		StateMachine {
	/*		Transition idle -> 	running{
					trigger{startMessage : in_port}
					guard { "//guard code" }
					action { "//transition action" }
				}
	*/		
			State idle{}
			State initialize{}
			State running{}
			State stopped{}
		}
	}
		


}
		


ProtocolClass MyComplexProtocol { 
	incoming { 
		Message in_message1 ( i1 : int32 , f2 : float64 ) 
		Message in_message2 ( i1 : int32 , f2 : float64 ) 
		Message in_message3 ( i1 : int32 , f2 : float64 ) 
		Message in_message4 ( i1 : int32 , f2 : float64 ) 
	} 
	outgoing 
	{ 
		Message out_message1 ( a1: float64)
		Message out_message2 ( a1: char) 
	} 
}
 
DataClass MyDataClass {
	Attribute _a1 : int32
	Operation f(b: ^boolean) { "" }
}
}
